{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Coding_Dojo\\\\MERN\\\\MERN_FullStack\\\\Authors\\\\client\\\\src\\\\components\\\\Edit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = props => {\n  _s();\n\n  const [singleAuthor, setSingleAuthor] = useState({});\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  const changeHandler = e => {\n    setSingleAuthor({ ...singleAuthor,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/authors/${id}`).then(res => {\n      console.log(res);\n      setSingleAuthor(res.data.result[0]);\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    axios.put(`http://localhost:8000/api/authors`, singleAuthor).then(res => {\n      if (res.data.error) {\n        // console.log(res);\n        setErrors(res.data.error.errors);\n      } else {\n        history.push(\"/\");\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"me-1\",\n          htmlFor: \"\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => changeHandler(e),\n          className: \"me-3\",\n          name: \"name\",\n          type: \"text\",\n          value: singleAuthor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: errors.name ? errors.name.message : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: e => submitHandler(e),\n          className: \"me-3 btn btn-success\",\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"k15xPaXOhK8HJC0zbNGA3OXHVr8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/Alex/Desktop/Coding_Dojo/MERN/MERN_FullStack/Authors/client/src/components/Edit.jsx"],"names":["React","useState","useEffect","useParams","useHistory","axios","Edit","props","singleAuthor","setSingleAuthor","errors","setErrors","history","id","changeHandler","e","target","name","value","get","then","res","console","log","data","result","catch","err","submitHandler","preventDefault","put","error","push","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCR,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACS,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAOV,SAAS,EAAtB;;AAEA,QAAMW,aAAa,GAAEC,CAAD,IAAK;AACrBN,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAiB,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KAAD,CAAf;AACH,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,KAAK,CAACc,GAAN,CAAW,qCAAoCN,EAAG,EAAlD,EACCO,IADD,CACMC,GAAG,IAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,eAAe,CAACY,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAf;AACH,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAE;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBI,GAApB;AACH,KAPD;AAQH,GATQ,EASP,EATO,CAAT;;AAWA,QAAMC,aAAa,GAAEb,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACc,cAAF;AACAxB,IAAAA,KAAK,CAACyB,GAAN,CAAW,mCAAX,EAA8CtB,YAA9C,EACCY,IADD,CACMC,GAAG,IAAE;AACP,UAAGA,GAAG,CAACG,IAAJ,CAASO,KAAZ,EAAkB;AACd;AACApB,QAAAA,SAAS,CAACU,GAAG,CAACG,IAAJ,CAASO,KAAT,CAAerB,MAAhB,CAAT;AACH,OAHD,MAGK;AACDE,QAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACH;AACJ,KARD,EASCN,KATD,CASOC,GAAG,IAAE;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBI,GAApB;AACH,KAXD;AAYH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,MAAjB;AAAwB,UAAA,OAAO,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGZ,CAAD,IAAKD,aAAa,CAACC,CAAD,CAAnC;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAyD,UAAA,IAAI,EAAC,MAA9D;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,KAAK,EAAEP,YAAY,CAACS;AAArG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BP,MAAM,CAACO,IAAP,GAAYP,MAAM,CAACO,IAAP,CAAYgB,OAAxB,GAAiC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,OAAO,EAAGlB,CAAD,IAAKa,aAAa,CAACb,CAAD,CAAlC;AAAuC,UAAA,SAAS,EAAC,sBAAjD;AAAwE,UAAA,IAAI,EAAC,QAA7E;AAAsF,UAAA,KAAK,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjDD;;GAAMT,I;UAGcF,U,EACHD,S;;;KAJXG,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Edit = (props) => {\r\n    const [singleAuthor,setSingleAuthor] = useState({})\r\n    const [errors,setErrors] = useState({})\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n\r\n    const changeHandler=(e)=>{\r\n        setSingleAuthor({...singleAuthor,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/authors/${id}`)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setSingleAuthor(res.data.result[0])\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err);\r\n        })\r\n    },[])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        axios.put(`http://localhost:8000/api/authors`,singleAuthor)\r\n        .then(res=>{\r\n            if(res.data.error){\r\n                // console.log(res);\r\n                setErrors(res.data.error.errors)\r\n            }else{\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"me-1\" htmlFor=\"\">Name:</label>\r\n                    <input onChange={(e)=>changeHandler(e)} className=\"me-3\" name=\"name\" type=\"text\" value={singleAuthor.name}/>\r\n                    <p className=\"text-danger\">{errors.name?errors.name.message: \"\"}</p>\r\n                    <input onClick={(e)=>submitHandler(e)} className=\"me-3 btn btn-success\" type=\"submit\" value=\"Update\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}