{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Coding_Dojo\\\\MERN\\\\MERN_FullStack\\\\Authors\\\\client\\\\src\\\\components\\\\Edit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = props => {\n  _s();\n\n  const [singleAuthor, setSingleAuthor] = useState({});\n  const [formInfo, setFormInfo] = useState({\n    name: null\n  });\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  const changeHandler = e => {\n    setFormInfo({ ...formInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/authors/${id}`).then(res => {\n      console.log(res);\n      setSingleAuthor(res.data.result);\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/authors\", formInfo).then(res => {\n      if (res.data.error) {\n        // console.log(res);\n        setErrors(res.data.error.errors);\n      } else {\n        history.push(\"/\");\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"me-1\",\n          htmlFor: \"\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => changeHandler(e),\n          className: \"me-3\",\n          name: \"name\",\n          type: \"text\",\n          value: song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: errors.name ? errors.name.message : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: e => submitHandler(e),\n          className: \"me-3 btn btn-success\",\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"BAc3J7r+hrIn4yHQJheSLS95OYA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/Alex/Desktop/Coding_Dojo/MERN/MERN_FullStack/Authors/client/src/components/Edit.jsx"],"names":["React","useState","useEffect","useParams","useHistory","axios","Edit","props","singleAuthor","setSingleAuthor","formInfo","setFormInfo","name","errors","setErrors","history","id","changeHandler","e","target","value","get","then","res","console","log","data","result","catch","err","submitHandler","preventDefault","post","error","push","song","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Edit = (props) => {\r\n    const [singleAuthor,setSingleAuthor] = useState({})\r\n    const [formInfo,setFormInfo] = useState({\r\n        name:null\r\n    });\r\n    const [errors,setErrors] = useState({})\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n\r\n    const changeHandler=(e)=>{\r\n        setFormInfo({...formInfo,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/authors/${id}`)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setSingleAuthor(res.data.result)\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err);\r\n        })\r\n    },[])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/authors\",formInfo)\r\n        .then(res=>{\r\n            if(res.data.error){\r\n                // console.log(res);\r\n                setErrors(res.data.error.errors)\r\n            }else{\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"me-1\" htmlFor=\"\">Name:</label>\r\n                    <input onChange={(e)=>changeHandler(e)} className=\"me-3\" name=\"name\" type=\"text\" value={song}/>\r\n                    <p className=\"text-danger\">{errors.name?errors.name.message: \"\"}</p>\r\n                    <input onClick={(e)=>submitHandler(e)} className=\"me-3 btn btn-success\" type=\"submit\" value=\"Update\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}